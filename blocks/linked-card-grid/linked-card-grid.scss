@use '../../styles/ne-global-imports' as *;
@use 'sass:meta';
@use 'sass:math';

.linked-card-grid-wrapper {
	$block: 'usa-card';
	$icon-size: px-to-rem(48px);

	@include meta.load-css('~uswds/usa-card/src/styles/usa-card');
	
	margin-bottom: units($component-spacing-lg);

	.#{$block} {
		&,
		&:last-child {
			margin: 0;
		}

		a {
			svg {
				display: none; // backup because sometimes the external link svg renders when it should not
			}
		}

		p {
			font-size: size('body', 'sm');
		}
		
		&-group {
			margin-bottom: 0;
			row-gap: units($theme-card-gap); // .usa-card__container handles the column gap via margins
		}

		&__heading {
			color: color('primary');
		}

		&__img {
			position:absolute;
			inset: 0;
			width: 100%;
			height: 100%;
			border-radius: 0 0 calc(0.5rem - 0rem) calc(0.5rem - 0rem);;
			z-index: -1;
		}

		&__body {
			display: flex;
			flex-direction: column;
			gap: units(4);

			&:has(img){
				color: color(primary-lightest);

				.usa-button__wrap {
					svg {
						fill: color(secondary); 
					}						
				}
			}
		}

		&__container {
			position: relative;
			border-top: 2px solid color(secondary);
			border-top-left-radius: 0;
			border-top-right-radius: 0;

			&:has(a) {
				cursor: pointer;

				&:hover { // focus state handled by uswds
					transition: box-shadow $transition-slow, border $transition-slow;
					border-top: 2px solid transparent;
					box-shadow: 0 0 0 3px color(secondary), 0 8px 16px 0 rgb(0 0 0 / 10%); // maps to shadow(3), mixin doesn't work with a custom one
				
					.usa-button__wrap {
						transform: translateX(units(0.5)); 
						transition: transform $transition;
					}
					
					.#{$block}__heading {
						text-decoration: underline;
						text-decoration-thickness: 2px;
					}
				}
			}

			&:has(img) {
				background: linear-gradient(to top, #0009 25%, #0000001a);

				.#{$block} {
					&__heading {
						color: color(secondary);
					}					
				}
			}

			a {
				@include u-radius('md');
				position: absolute;
				width: 100%;
				height: 100%;
				border-top-left-radius: 0;
				border-top-right-radius: 0;
				text-decoration: none;  
				z-index: 1;             
				inset: 0;
			}
		}

		.usa-button__wrap {
			height: $icon-size;
			margin-top: auto;

			svg {
				width: $icon-size;
				height: $icon-size;
				fill: color(primary);
			}
		}		
	}

	@mixin collection-theme($heading-color, $body-color, $svg-fill, $container-bg:white, $gradient: linear-gradient(to top, rgba(255, 255, 255, 0.7) 60%, transparent),$body-color-img : $body-color) {
		.#{$block} {

			&__heading{
				color: $heading-color;
			}

			&__body {
				color: $body-color;
			}
			
			.usa-button__wrap {
				svg {
					fill: $svg-fill;
				}
			}

			&__container {
				border-top: 2px solid $heading-color ;
				background: $container-bg;

				&:has(img) {
					background: $gradient;
					.#{$block}__body{
						color: $body-color-img;
					}
					.#{$block}__heading{
						color: $heading-color;
					}

					.usa-button__wrap {
						svg {
							fill: $svg-fill;
						}
					}
				}

				&:has(a) {
					&:hover {
						box-shadow:	0	0	0	3px	$heading-color,
							0 8px 16px 0 rgb(0 0 0 / 10%);
					}
				}
			}
		}
	}

	.blue-filled {
		@include collection-theme(color('secondary'),
		color('primary-lightest'),
		color('secondary'),
		color('primary'),
		linear-gradient(to top, #38728fcc 80%, #c3ceda80));
	}
	
	.red-filled {
		@include collection-theme(color('secondary'),
		color('primary-lightest'),
		color('secondary'),
		$ne-color-dark-red,
		linear-gradient(to top, #bd1f5399 60%, #dda1a633));
	}
	
	.yellow-filled {
		@include collection-theme(color('primary'),
		color('primary-darkest'),
		color('primary'),
		$ne-color-yellow,
		linear-gradient(to top, #ffc34dcc 60%, #fff2d680));
	}
	
	.green-filled {
		@include collection-theme($ne-color-dark-blue,
		color('primary-darkest'),
		$ne-color-dark-blue,
		$ne-color-green,
		linear-gradient(to top, #b9bd32cc 60%, #b9bd3280));
	}

	.red{
		@include collection-theme($ne-color-dark-red,
		black,
		$ne-color-dark-red);
	}

	.yellow{
		@include collection-theme($ne-color-yellow,
		black,
		$ne-color-yellow,
		white,
		linear-gradient(to top, #0009 25%, #0000001a),
		white);
	}

	.green{
		@include collection-theme($ne-color-green,
		black,
		$ne-color-green,
		white,
		linear-gradient(to top, #0009 25%, #0000001a),
		white);
	}

}